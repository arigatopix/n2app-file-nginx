events {
    worker_connections 1024;
}

http {
    upstream minio_s3 {
        least_conn;
        server minio:9000; # Replace with MinIO container IP if needed, or keep it as localhost.
    }

    upstream minio_console {
        least_conn;
        server minio:9001; # Replace with MinIO container IP if needed, or keep it as localhost.
    }

    server {
        listen 80;
        listen [::]:80;
        server_name n2app-file.pea.co.th;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name n2app-file.pea.co.th;

        ssl_certificate /etc/nginx/certs/n2app-file.pea.co.th.crt;
        ssl_certificate_key /etc/nginx/certs/n2app-file.pea.co.th.key;

        client_max_body_size 0;
        proxy_buffering off;
        proxy_request_buffering off;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;

            proxy_pass https://minio_s3;
        }

        location /minio/ui/ {
            rewrite ^/minio/ui/(.*) /$1 break;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            real_ip_header X-Real-IP;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            chunked_transfer_encoding off;

            proxy_pass https://minio_console;
        }
    }
}